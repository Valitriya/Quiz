const questions = [
	{
		question: "–ö–∞–∫–æ–π —è–∑—ã–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ?",
		answers: ["Java", "C", "Python", "JavaScript"],
		correct: 4,
	},
	{
		question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç CSS?",
		answers: [
			"Central Style Sheets",
			"Cascading Style Sheets",
			"Cascading Simple Sheets",
			"Cars SUVs Sailboats",
		],
		correct: 2,
	},
	{
		question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç HTML?",
		answers: [
			"Hypertext Markup Language",
			"Hypertext Markdown Language",
			"Hyperloop Machine Language",
			"Helicopters Terminals Motorboats Lamborginis",
		],
		correct: 1,
	},
	{
		question: "–ö–∞–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞",
		answers: [
			"transition",
			"opacity",
			"transparency",
			"transform",
		],
		correct: 2,
	},
	{
		question: "–ß—Ç–æ –∏–∑ –ø–µ—Ä–µ—á–∏–ª–µ–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ –∏–º–µ–µ—Ç –Ω–∞–∏–±–æ–ª—å—à—É—é –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ—Å—Ç—å –≤ CSS?",
		answers: [
			"–°–µ–ª–µ–∫—Ç–æ—Ä id",
			"inline - —Å—Ç–∏–ª—å",
			"–°–µ–ª–µ–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞",
			"–°–µ–ª–µ–∫—Ç–æ—Ä —Ç–µ–≥–∞",
		],
		correct: 2,
	},
	{
		question: "–ö–∞–∫–∞—è –µ–¥–∏–Ω–∏—Ü–∞ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É–µ—Ç 1% —à–∏—Ä–∏–Ω—ã –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞?",
		answers: [
			"vh",
			"vw",
			"rem",
			"em",
		],
		correct: 2,
	},
	{
		question: "–ö–∞–∫ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–ª–∞—Å—Å –≤ JavaScript?",
		answers: [
			"function MyClass() {...}",
			"var MyClass = function() {...}",
			"class = MyClass {...}",
			"class MyClass {...}",
		],
		correct: 4,
	},
	{
		question: "–ö–∞–∫–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä typeof –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è null?",
		answers: [
			"null",
			"object",
			"symbol",
			"–û—à–∏–±–∫–∞",
		],
		correct: 2,
	},
	{
		question: "–ö–∞–∫–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤ JavaScript –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ª–æ–∂–Ω—ã–º (false)?",
		answers: [
			"==",
			"!",
			"!==",
			"&&",
		],
		correct: 2,
	},
	{
		question: "–ö–∞–∫–æ–π —Å–µ–ª–µ–∫—Ç–æ—Ä –≤ CSS –≤—ã–±–∏—Ä–∞–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ?",
		answers: [
			"*",
			"body",
			"html",
			"all",
		],
		correct: 1,
	},
	{
		question: "–ö–∞–∫–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤ JavaScript –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö?",
		answers: [
			"==",
			"=",
			"===",
			"!=",
		],
		correct: 3,
	},
	{
		question: "–ö–∞–∫–æ–π –º–µ—Ç–æ–¥ –≤ JavaScript —É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞?",
		answers: [
			"array.unshift()",
			"array.shift()",
			"array.pop()",
			"array.push()",
		],
		correct: 3,
	},
	{
		question: "–ö–∞–∫–æ–π –º–µ—Ç–æ–¥ –≤ JavaScript –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ?",
		answers: [
			"parseInt()",
			"parseFloat()",
			"toNumber()",
			"toString()",
		],
		correct: 1,
	},
];

const headerContainer = document.querySelector('#header');
const listContainer = document.querySelector('#list');
const submitBtn = document.querySelector('#submit');

let score = 0;
let questionIndex = 0;

clearWindow();
showQuestion();
submitBtn.onclick = checkAnswer;

function clearWindow() {
	headerContainer.innerHTML = '';
	listContainer.innerHTML = '';
}

function showQuestion() {
	const headerTemplate = `<h2 class="title">%title%</h2>`;
	const title = headerTemplate.replace('%title%', questions[questionIndex]['question']);
	headerContainer.innerHTML = title;

	let answerNumber = 1;
	for(answerText of questions[questionIndex]['answers']){
		const questionTemplate = `
			<li>
				<label>
					<input type="radio" class="answer" name="answer" value="%number%" />
					<span>%answer%</span>
				</label>
			</li>`
		const answerHTML = questionTemplate
							.replace('%answer%', answerText)
							.replace('%number%', answerNumber)
		listContainer.innerHTML += answerHTML;

		answerNumber++;
	}
}

function checkAnswer(){
	const checkedRadio = listContainer.querySelector('input[type="radio"]:checked');

	if(!checkedRadio) {
		submitBtn.blur();
		return
	}
	const userAnswer = parseInt(checkedRadio.value);

	if(userAnswer === questions[questionIndex]['correct']){
		score++;
	}

	if(questionIndex !== questions.length - 1 ){
		questionIndex++;
		clearWindow();
		showQuestion();
	} else {
		clearWindow();
		showResults();
	}
}

function showResults() {
	const resultsTemplate = `
		<h2 class='title'>%title%</h2>
		<h3 class='summary'>%message%</h3>
		<p class='result'>%result%</p>
		`;
	let title, message;
	if(score === questions.length){
		title = '–ö—Ä–∞—Å–∞–≤–∞ üíã!'
		message = '–í—Å–µ –æ—Ç–≤–µ—Ç—ã –≤–µ—Ä–Ω—ã, –∑–∞–¥—Ä–æ—Ç(–∫–∞) ü§ì'
	} else if((score * 100) / questions.length >= 50){
		title = '–ù—É —Ç–∞–∫ —Å–µ–±–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç üòê'
		message = '–ú–æ–≥(–ª–∞) –±—ã –∏ –ø–æ–ª—É—á—à–µ üôÑ'
	}else {
		title = '–ú–¥–∞ ü§ê'
		message = '–ò–¥–∏ —É—á–∏ ü§£'
	}

	let result = `${score} –∏–∑ ${questions.length}`;

	const finalMessage = resultsTemplate
						.replace('%title%', title)
						.replace('%message%', message)
						.replace('%result%', result)

	headerContainer.innerHTML = finalMessage;

	submitBtn.blur();
	submitBtn.innerText = '–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ';
	submitBtn.onclick = () => history.go();
}



